local color_utils = require('tavern.util.colors')
local M = {}

local colors = {
    -- Shades and Tints
    base00 = '#1b1413', -- Background
    base01 = '#322523',
    base02 = '#493633',
    base03 = '#553f3c',
    base04 = '#bba2a0',
    base05 = '#cbb8b7', -- Foreground
    base06 = '#dccfcd',
    base07 = '#ece5e4',
    -- Colors
    base08 = '#b24345',
    base09 = '#e56357',
    base0A = '#b7774e',
    base0B = '#e5e557',
    base0C = '#61cc7c',
    base0D = '#5487bf',
    base0E = '#7566cc',
    base0F = '#e5507f',
}

local theme = {
    ColorColumn = { bg = color_utils.lighten(colors.base00, 0.10) },
    Cursor = { fg = color_utils.invert_color(colors.base05), bg = colors.base05 },
    CursorColumn = { bg = color_utils.lighten(colors.base00, 0.10) },
    CursorLine = { link = 'CursorColumn' },
    Directory = { fg = colors.base08, style = { 'bold' } },
    DiffAdd = { bg = color_utils.darken(colors.base0C, 0.3), fg = colors.base07 },
    DiffChange = { bg = color_utils.darken(colors.base0F, 0.3), fg = colors.base07 },
    DiffDelete = { bg = color_utils.darken(colors.base08, 0.3), fg = colors.base07 },
    DiffText = { bg = color_utils.darken(colors.base0D, 0.3), fg = colors.base07 },
    EndOfBuffer = { fg = color_utils.darken(colors.base05, 0.3) },
    ErrorMsg = { fg = color_utils.saturate(colors.base09, 0.2) },
    VertSplit = { bg = colors.base00, fg = colors.base05 },
    Folded = { bg = colors.base03, fg = colors.base05 },
    FoldColumn = { link = 'Folded' },
    SignColumn = { bg = colors.base00 },
    IncSearch = { bg = colors.base0A, fg = colors.base00 },
    Substitute = { link = 'IncSearch' },
    LineNr = { fg = color_utils.lighten(colors.base01, 0.3) },
    CursorLineNr = { fg = colors.base0A },
    MatchParen = { bg = colors.base03 },
    ModeMsg = { bg = colors.base00, fg = colors.base05, style = { 'bold' } },
    NonText = { fg = color_utils.darken(colors.base05, 0.3) },
    Normal = { bg = colors.base00, fg = colors.base05 },
    NormalFloat = { bg = color_utils.darken(colors.base00, 0.1), fg = colors.base05 },
    NormalNC = { link = 'Normal' },
    Pmenu = { bg = color_utils.lighten(colors.base00, 0.1), fg = colors.base05 },
    PmenuSel = { bg = color_utils.lighten(colors.base00, 0.25), style = { 'bold' } },
    PmenuSbar = { bg = colors.base02 },
    PmenuThumb = { bg = colors.base05 },
    Question = { fg = colors.base05, style = { 'italic' } },
    QuickFixLine = { fg = colors.base0E },
    Search = { link = 'IncSearch' },
    SpecialKey = { fg = colors.base0E },
    SpellBad = { fg = colors.base09, style = { 'underline', 'italic' } },
    SpellCap = { fg = colors.base0D, style = { 'italic' } },
    SpellLocal = { fg = colors.base0F },
    SpellRare = { fg = colors.base0D },
    StatusLine = { bg = colors.base02 },
    StatusLineNC = { bg = colors.base01 },
    TabLine = { bg = colors.base01 },
    TabLineFill = { bg = colors.base01 },
    TabLineSel = { bg = colors.base00, style = { 'bold' } },
    Title = { fg = colors.base05, style = { 'bold' } },
    Visual = { bg = color_utils.darken(colors.base02, 0.2), style = { 'bold' } },
    VisualNOS = { bg = color_utils.darken(colors.base02, 0.3) },
    WarningMsg = { fg = colors.base0B, style = { 'bold', 'italic' } },
    Whitespace = { fg = color_utils.lighten(color_utils.desaturate(colors.base00, 0.25), 0.25) },
    Winseparator = { link = 'Normal' },
    WildMenu = { bg = colors.base01, fg = colors.base05 },
    Comment = { fg = color_utils.lighten(color_utils.desaturate(colors.base03, 0.15), 0.10), style = { 'italic' } },
    Constant = { fg = colors.base0A },
    String = { fg = colors.base0C },
    Character = { fg = colors.base0C },
    Number = { fg = colors.base0D },
    Boolean = { fg = colors.base08 },
    Float = { fg = colors.base0D },
    Identifier = { fg = colors.base04 },
    Function = { fg = colors.base09 },
    Statement = { fg = colors.base0F },
    Conditional = { fg = colors.base08 },
    Repeat = { fg = colors.base08 },
    Label = { fg = colors.base0E },
    Operator = { fg = colors.base05 },
    Keyword = { fg = colors.base0F },
    Exception = { fg = colors.base0E },
    PreProc = { fg = colors.base0A },
    Include = { fg = colors.base0A },
    Define = { fg = colors.base0A },
    Macro = { fg = colors.base0A },
    PreCondit = { fg = colors.base0A },
    Type = { fg = colors.base0D },
    StorageClass = { fg = colors.base0E },
    Structure = { fg = colors.base0D },
    Typedef = { fg = colors.base0D },
    Special = { fg = colors.base0C },
    SpecialChar = { fg = colors.base0C },
    SpecialComment = { fg = colors.base0C },
    Tag = { fg = colors.base09 },
    Delimiter = { fg = colors.base09 },
    Debug = { fg = colors.base0B },
    DiagnosticError = { link = 'ErrorMsg' },
    DiagnosticWarn = { fg = colors.base0B },
    DiagnosticInfo = { fg = colors.base0C },
    DiagnosticHint = { fg = colors.base0E },
    -- Gitsigns
    GitSignsAdd = { bg = colors.base00, fg = colors.base0C },
    GitSignsChange = { bg = colors.base00, fg = colors.base0F },
    GitSignsDelete = { bg = colors.base00, fg = colors.base08 },
    -- Lazy.nvim
    LazyProp = { fg = colors.base0E },
    LazyDimmed = { fg = color_utils.darken(colors.base04, 0.25) },
    -- Notify.nvim
    NotifyBackground = { link = 'Normal' },
}

function M.get_theme()
    return theme
end

return M
